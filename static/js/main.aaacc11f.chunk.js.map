{"version":3,"sources":["components/$widgets/form-input/AppTextField.js","components/$widgets/buttons/AppButton.js","components/todo-form/todo-form.js","components/$widgets/icons/app-icons.js","components/todo-list/todo-list.js","components/no-task/no-task.js","enum/common.enum.js","config/config.js","config/urlConfig.js","service/core/http.service.js","service/api/TodoService.js","components/todo-app/todo-app.js","index.js"],"names":["TextFieldWithStyles","withStyles","root","width","props","TextField","AppTextField","onChange","AppButtonWithStyles","Button","AppButton","TodoForm","addTodo","textRef","useRef","className","Grid","container","justify","item","xs","sm","md","lg","variant","size","inputRef","onKeyDown","e","key","current","value","handleTodoInput","color","onClick","DeleteIcon","style","height","cursor","AppEditIcon","AppCloseIcon","display","alignItems","marginLeft","TodoList","todoItems","removeTask","editTodo","useState","editing","setEditing","Box","mt","spacing","TableContainer","component","Paper","Table","TableBody","map","todoItem","TableRow","TableCell","_id","name","defaultValue","preventDefault","onKeyUp","onBlur","document","querySelector","NoTask","Card","CardContent","Typography","Environment","config","baseUrl","env","urls","HTTP","axios","create","baseURL","interceptors","response","use","undefined","error","message","toast","status","TodoService","getAllTodos","a","get","result","data","todo","post","console","log","deleteTodo","id","apiUrl","delete","updateTodo","put","TodoApp","setTodoItems","useEffect","val","todoReq","info","todos","updatedTodoList","filter","event","forEach","target","length","ReactDOM","render","StrictMode","position","autoClose","hideProgressBar","getElementById"],"mappings":"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","file":"static/js/main.aaacc11f.chunk.js","sourcesContent":["import { TextField, withStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst TextFieldWithStyles = withStyles({\r\n    root: {\r\n        width: \"100%\"\r\n    },\r\n})((props) => <TextField {...props} />);\r\n\r\nfunction AppTextField(props) {\r\n    const { onChange } = props;\r\n    return <TextFieldWithStyles\r\n        {...props}\r\n        onChange={onChange}\r\n    />\r\n}\r\nexport default AppTextField;","import { Button, withStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst AppButtonWithStyles = withStyles({\r\n    root: {\r\n\r\n    }\r\n})((props) => <Button {...props}/>)\r\n\r\nconst AppButton = (props) => (\r\n    <AppButtonWithStyles \r\n    {...props}\r\n    />\r\n)\r\n\r\nexport default AppButton;","import React, { useRef } from \"react\";\r\nimport \"./todo-form.scss\";\r\nimport AppTextField from \"../$widgets/form-input/AppTextField\";\r\nimport AppButton from \"../$widgets/buttons/AppButton\";\r\nimport { Paper, Box, Grid } from \"@material-ui/core\";\r\n\r\nconst TodoForm = ({ addTodo }) => {\r\n    let textRef = useRef();\r\n\r\n    const handleTodoInput = (e) => {\r\n        if (e.key === 'Enter') {\r\n            addTodo(textRef.current.value);\r\n            textRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-form-main\">\r\n            <div className=\"form\">\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={6} sm={6} md={6} lg={4}>\r\n                        <AppTextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            inputRef={textRef}\r\n                            onKeyDown={(e) => handleTodoInput(e)}\r\n                        />\r\n                    </Grid>\r\n                    <AppButton\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className=\"ml-1\"\r\n                        onClick={() => {\r\n                            addTodo(textRef.current.value);\r\n                            textRef.current.value = ''\r\n                        }}\r\n                    >Add Task</AppButton>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm","import HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst DeleteIcon = (props) => (\r\n    <HighlightOffIcon style={{\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        cursor: \"pointer\",\r\n        color: \"#e53737\"\r\n    }}\r\n    {...props}\r\n    />\r\n)\r\n\r\nconst AppEditIcon = (props) => (\r\n  <EditIcon style={{\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    cursor: \"pointer\",\r\n    color: \"#1d84b5\"\r\n  }}\r\n  {...props}\r\n  />\r\n)\r\nconst AppCloseIcon = (props) => (\r\n  <CloseIcon style={{\r\n    width: \"20px\",\r\n    height: \"40px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"20px\",\r\n    cursor: \"pointer\",\r\n    color: \"#aaa\"\r\n  }}\r\n  {...props}\r\n  />\r\n)\r\n\r\nexport {\r\n    DeleteIcon,\r\n    AppEditIcon,\r\n    AppCloseIcon\r\n}","import { Paper, Box, TableBody, TableContainer, TableCell, TableRow, Table, Grid } from \"@material-ui/core\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport AppTextField from \"../$widgets/form-input/AppTextField\";\r\nimport { DeleteIcon, AppEditIcon, AppCloseIcon } from \"../$widgets/icons/app-icons\";\r\nimport \"./todo-list.scss\";\r\n\r\nconst TodoList = ({ todoItems, removeTask, editTodo }) => {\r\n\r\n    const [editing, setEditing] = useState(null);\r\n\r\n    return (\r\n        <div className=\"todo-list-main\">\r\n            <Box mt={8}>\r\n                <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item xs={10} sm={8} md={7} lg={5} className=\"\">\r\n                        <TableContainer component={Paper}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        todoItems && todoItems.map(todoItem => (\r\n                                            <TableRow key={todoItem._id}>\r\n                                                <TableCell className= \"py-0\">\r\n                                                    {\r\n                                                        editing === todoItem._id ?\r\n                                                            <div className=\"d-flex\">    \r\n                                                            <AppTextField\r\n                                                                variant=\"outlined\"\r\n                                                                name={`editing_${todoItem._id}`}\r\n                                                                defaultValue={todoItem.name}\r\n                                                                size=\"small\"\r\n                                                                className=\"py-0\"\r\n                                                                onKeyDown={(e) => {\r\n                                                                    if (e.key === 'Enter') e.preventDefault();\r\n                                                                }}\r\n                                                                onKeyUp= {(e) => {\r\n                                                                    if (e.key === 'Enter') editTodo(e, todoItem._id, setEditing)\r\n                                                                }}\r\n                                                                onBlur= {(e)=> editTodo(e, todoItem._id, setEditing)}\r\n                                                            />\r\n                                                            <AppCloseIcon onClick={() => setEditing(null)}/>\r\n                                                            </div>\r\n                                                            :\r\n                                                            <span>{todoItem.name}</span>\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell className=\"d-flex justify-end align-center\">\r\n                                                    <AppEditIcon\r\n                                                        onClick={() => {\r\n                                                            setEditing(todoItem._id);\r\n                                                            document.querySelector(`[name=\"editing_${todoItem._id}\"]`)\r\n                                                        }}\r\n                                                    />\r\n                                                    <DeleteIcon onClick={() => removeTask(todoItem._id)} />\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport { Paper, Box, Grid, Card, CardContent, Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nconst NoTask = () => (\r\n    <Box mt={3}>\r\n        <Grid container spacing={1} justify=\"center\">\r\n            <Grid item xs={10} sm={8} md={7} lg={5}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography component=\"p\" className=\"text-center\">No task Added!</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    </Box>\r\n)\r\n\r\nexport default NoTask;","export const Environment = {\r\n    dev: 'development',\r\n    prod: \"production\"\r\n};\r\n","import {Environment} from \"../enum/common.enum\";\r\n\r\nexport class config {\r\n\r\n    static env = Environment.prod\r\n    \r\n}\r\n\r\n","import { Environment } from \"../enum/common.enum\";\r\nimport { config } from \"./config\";\r\n\r\nconst baseUrlDev = 'http://localhost:5000';\r\nconst baseUrlProd = 'https://evening-wave-28538.herokuapp.com';\r\n\r\nexport const baseUrl = config.env === Environment.dev ? baseUrlDev : baseUrlProd;\r\n\r\nexport const urls = {\r\n    addTodo: \"/addTodo\",\r\n    getAllTodo: \"/getAllTodos\",\r\n    updateTodo: \"/updateTodo\",\r\n    deleteTodo: \"/deleteTodo\"\r\n}\r\n\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport {baseUrl} from '../../config/urlConfig';\r\n\r\nexport const HTTP = axios.create({\r\n    baseURL: baseUrl\r\n})\r\n\r\nHTTP.interceptors.response.use(undefined, (error) => {\r\n    if (error.message === 'Network Error' && !error.response) {\r\n        return toast.error('Network Error');\r\n    }\r\n    const { status } = error.response;\r\n\r\n    if (status === 404) {\r\n        return toast.error(\"404 | Not Found\");\r\n    }\r\n\r\n    if (status === 500) {\r\n        return toast.error(\"500 | Internal Server Error\");\r\n    }\r\n})","import { urls } from \"../../config/urlConfig\";\r\nimport { HTTP } from \"../core/http.service\";\r\n\r\nexport class TodoService {\r\n    \r\n    static getAllTodos = async () => {\r\n        const result = await HTTP.get(urls.getAllTodo);\r\n        if (result && result.data) {\r\n            return result.data;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    static addTodo = async (todo) => {\r\n        const result = await HTTP.post(urls.addTodo, todo);\r\n        if (result.data) {\r\n            console.log(\"result data \", result.data);\r\n            return result.data;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    static deleteTodo = async (id) => {\r\n        const apiUrl = `${urls.deleteTodo}/${id}`\r\n        const result = await HTTP.delete(apiUrl);\r\n        if (result.data) {\r\n            return result.data;\r\n        }       \r\n        return undefined;\r\n    }\r\n\r\n    static updateTodo = async (id, todo) => {\r\n        const apiUrl = `${urls.updateTodo}/${id}`;\r\n        const result = await HTTP.put(apiUrl, todo);\r\n        if (result.data) {\r\n            return result.data;\r\n        }\r\n        return undefined;\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport TodoForm from \"../todo-form/todo-form\";\r\nimport TodoList from \"../todo-list/todo-list\";\r\nimport { toast } from \"react-toastify\";\r\nimport NoTask from \"../no-task/no-task\";\r\nimport { TodoService } from \"../../service/api/TodoService\";\r\n\r\nconst TodoApp = () => {\r\n\r\n    const [todoItems, setTodoItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllTodos();\r\n    }, []);\r\n\r\n    const addTodo = async (val) => {\r\n        console.log(\"val \", val);\r\n        if (!val) {\r\n            toast.error(\"Task can't be empty!\");\r\n            return;\r\n        }\r\n        const todoReq = { name: val };\r\n        const todo = await TodoService.addTodo(todoReq);\r\n        if (!todo) {\r\n            return;\r\n        }\r\n        toast.info(\"Task Added Successfully!\");\r\n        setTodoItems([...todoItems, todo]);\r\n    }\r\n\r\n    const getAllTodos = async () => {\r\n        const todos = await TodoService.getAllTodos();\r\n        if (!todos) {\r\n            return;\r\n        }\r\n        setTodoItems([...todos]);\r\n    }\r\n\r\n    const removeTask = async (id) => {\r\n        const updatedTodoList = todoItems.filter(todo => todo._id !== id);\r\n        const todo = await TodoService.deleteTodo(id);\r\n        if (!todo) {\r\n            return;\r\n        }\r\n        toast.info(\"Task Deleted Successfully!\");\r\n        setTodoItems([...updatedTodoList]);\r\n    }\r\n\r\n    const editTodo = async (event, id, setEditing) => {\r\n        todoItems.forEach(todo => { \r\n            if (todo._id === id) {\r\n                todo.name = event.target.value;\r\n            }\r\n        })\r\n        const todoReq = {\r\n            name: event.target.value\r\n        }\r\n        const todo = await TodoService.updateTodo(id, todoReq);\r\n        if (!todo) {\r\n            return;\r\n        }\r\n        toast.info(\"Task Updated Successfully!\");\r\n        setTodoItems([...todoItems]);\r\n        setEditing(null);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"todo-app-main\">\r\n            <h1 className=\"title text-center mt-5\">Todo Application</h1>\r\n            <TodoForm addTodo={addTodo} />\r\n            {\r\n                todoItems.length > 0 ?\r\n                    <TodoList todoItems={todoItems} removeTask={removeTask} editTodo={editTodo}/>\r\n                    :\r\n                    <NoTask />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport TodoApp from \"./components/todo-app/todo-app\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n    <ToastContainer position=\"top-right\"\n      autoClose={5000}\n      hideProgressBar={true} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}